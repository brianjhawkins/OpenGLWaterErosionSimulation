#version 460 core
layout(local_size_x = 32, local_size_y = 32) in;

layout(rgba32f, binding = 0) uniform image2D CD_image_output;

layout(rgba32f, binding = 1) uniform image2D CD_image;

layout(rgba32f, binding = 2) uniform image2D S_image;

layout(rgba32f, binding = 3) uniform image2D SC_image;

void main()
{    
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

	vec2 imageSize = imageSize(CD_image_output);
    ivec2 deltaX = ivec2(1, 0);
	ivec2 deltaY = ivec2(0, 1);

	vec4 centerColumn = imageLoad(CD_image, pixelCoords);

	float newTerrainValue = centerColumn.a;

	// Left inflow soil
	if(pixelCoords.x != 0){
		newTerrainValue += imageLoad(S_image, pixelCoords - deltaX).g;
	}

	// Right inflow soil
	if(pixelCoords.x != imageSize.x - 1){
		newTerrainValue += imageLoad(S_image, pixelCoords + deltaX).r;
	}

	// Top inflow soil
	if(pixelCoords.y != imageSize.y - 1){
		newTerrainValue += imageLoad(S_image, pixelCoords + deltaY).a;
	}

	// Bottom inflow soil
	if(pixelCoords.y != 0){
		newTerrainValue += imageLoad(S_image, pixelCoords - deltaY).b;
	}

	// Bottom left inflow soil
	if(pixelCoords.x != 0 && pixelCoords.y != 0){
		newTerrainValue += imageLoad(S_image, pixelCoords - deltaX - deltaY).a;
	}

	// Bottom right inflow soil
	if(pixelCoords.x != imageSize.x - 1 && pixelCoords.y != 0){
		newTerrainValue += imageLoad(S_image, pixelCoords + deltaX - deltaY).b;
	}

	// Top left inflow soil
	if(pixelCoords.x != 0 && pixelCoords.y != imageSize.y - 1){
		newTerrainValue += imageLoad(S_image, pixelCoords - deltaX + deltaY).g;
	}

	// Top right inflow soil
	if(pixelCoords.x != imageSize.x - 1 && pixelCoords.y != imageSize.y - 1){
		newTerrainValue += imageLoad(S_image, pixelCoords + deltaX + deltaY).r;
	}

	imageStore(CD_image_output, pixelCoords, vec4(centerColumn.r, centerColumn.g, centerColumn.b, newTerrainValue));
}