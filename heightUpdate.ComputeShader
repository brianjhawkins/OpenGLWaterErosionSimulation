#version 460 core
layout(local_size_x = 32, local_size_y = 32) in;

layout(rgba32f, binding = 0) uniform image2D CD_image_output;

layout(rgba32f, binding = 1) uniform image2D CD_image;

layout(rgba32f, binding = 2) uniform image2D F_image;

layout(rgba32f, binding = 3) uniform image2D R_image;

uniform float timeStep;

void main()
{    
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

	vec2 imageSize = imageSize(CD_image_output);
    ivec2 deltaX = ivec2(1, 0);
	ivec2 deltaY = ivec2(0, 1);

	vec4 centerColumn = imageLoad(CD_image, pixelCoords);
	vec4 centerWaterFlux = imageLoad(F_image, pixelCoords);
	vec4 centerRegolithFlux = imageLoad(R_image, pixelCoords);

	// Water inflow flux values
	float waterInLeft = 0;
	float waterInRight = 0;
	float waterInTop = 0;
	float waterInBottom = 0;

	// Regolith inflow flux values
	float regolithInLeft = 0;
	float regolithInRight = 0;
	float regolithInTop = 0;
	float regolithInBottom = 0;

	float l = 1 / imageSize.x;
	float waterVolumeChange;
	float regolithVolumeChange;

	float newWaterHeight;
	float newRegolithHeight;

	if(pixelCoords.x != 0){
		waterInLeft = imageLoad(F_image, pixelCoords - deltaX).g;
		regolithInLeft = imageLoad(R_image, pixelCoords - deltaX).g;
	}

	if(pixelCoords.x != imageSize.x - 1){
		waterInRight = imageLoad(F_image, pixelCoords + deltaX).r;
		regolithInRight = imageLoad(R_image, pixelCoords + deltaX).r;
	}

	if(pixelCoords.y != imageSize.y - 1){
		waterInTop = imageLoad(F_image, pixelCoords + deltaY).a;
		regolithInTop = imageLoad(R_image, pixelCoords + deltaY).a;
	}

	if(pixelCoords.y != 0){
		waterInBottom = imageLoad(F_image, pixelCoords - deltaY).b;
		regolithInBottom = imageLoad(R_image, pixelCoords - deltaY).b;
	}

	waterVolumeChange = timeStep * ((waterInLeft + waterInRight + waterInTop + waterInBottom) - (centerWaterFlux.r + centerWaterFlux.g + centerWaterFlux.b + centerWaterFlux.a));
	regolithVolumeChange = timeStep * ((regolithInLeft + regolithInRight + regolithInTop + regolithInBottom) - (centerRegolithFlux.r + centerRegolithFlux.g + centerRegolithFlux.b + centerRegolithFlux.a));

	newWaterHeight = centerColumn.r + (waterVolumeChange / (l * l));
	newRegolithHeight = centerColumn.b + (regolithVolumeChange / (l * l));

	imageStore(CD_image_output, pixelCoords, vec4(newWaterHeight, centerColumn.g, newRegolithHeight, centerColumn.a));
}